[metadata]
description = "Host circuit configurations for Trojan5 (Instruction pattern-based address modification)"
trojan_id = "trojan5"

# List of host files for this trojan (for iteration)
host_files = [
    "trojan5_cpu0_host",
    "trojan5_cpu1_host",
    "trojan5_decoder0_host",
    "trojan5_decoder1_host"
]

# Host circuit mapping for Trojan5
[hosts]

[hosts.trojan5_cpu0_host]
file = "trojan5_cpu0_host.v"
description = "Simple CPU with instruction decoder and registers"
# Crypto parameters
[hosts.trojan5_cpu0_host.crypto_vars]
LFSR_INIT = { type = "random_hex", bits = 32, description = "Seed for LFSR" }
OUT_REG = { type = "choice", values = [0, 1, 2, 3, 4, 5, 6, 7], description = "Output register" }


[hosts.trojan5_cpu1_host]
file = "trojan5_cpu1_host.v"
description = "Simple CPU with instruction decoder and registers"
# Crypto parameters
[hosts.trojan5_cpu1_host.crypto_vars]
LFSR_INIT = { type = "random_hex", bits = 16, description = "Seed for LFSR" }
OUT_REG = { type = "choice", values = [0, 1, 2, 3, 4, 5, 6, 7], description = "Output register" }


[hosts.trojan5_decoder0_host]
file = "trojan5_decoder0_host.v" 
description = "Binary decoder with configurable output count"
# Crypto parameters
[hosts.trojan5_decoder0_host.crypto_vars]
LFSR_INIT = { type = "random_hex", bits = 128, description = "Seed for LFSR" }


[hosts.trojan5_decoder1_host]
file = "trojan5_decoder1_host.v"
description = "Binary decoder with configurable output count"
# Crypto parameters
[hosts.trojan5_decoder1_host.crypto_vars]
XOR_MASK = { type = "random_hex", bits = 16, description = "XOR mask for decoder" }
