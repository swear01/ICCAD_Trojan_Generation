[metadata]
description = "Host circuit configurations for Trojan9 (Mode-based arithmetic computations)"
trojan_id = "trojan9"

# List of host files for this trojan (for iteration)
host_files = [
    "trojan9_cache_host", 
    "trojan9_crypto_host", 
    "trojan9_neural_host",
    "trojan9_dsp_host",
    "trojan9_vector_host",
    "trojan9_graphics_host",
    "trojan9_compression_host"
]

# Host circuit mapping for Trojan9
[hosts]

[hosts.trojan9_cache_host]
file = "trojan9_cache_host.v"
description = "Cache controller with multi-way associativity and LRU replacement"
# Structural parameters
[hosts.trojan9_cache_host.params]
CACHE_WAYS = { type = "choice", values = [2, 4, 8], description = "Number of cache ways" }
CACHE_SETS = { type = "choice", values = [32, 64, 128], description = "Number of cache sets" }
CACHE_PATTERN = { type = "random_hex", bits = 104, description = "Pattern for cache data generation" }

[hosts.trojan9_crypto_host]
file = "trojan9_crypto_host.v"
description = "Cryptographic controller with multiple cipher modes"
# Structural parameters
[hosts.trojan9_crypto_host.params]
CRYPTO_ROUNDS = { type = "choice", values = [8, 16, 32], description = "Number of encryption rounds" }
BLOCK_SIZE = { type = "choice", values = [64, 128, 256], description = "Block size in bits" }
CRYPTO_PATTERN = { type = "random_hex", bits = 88, description = "Pattern for crypto data generation" }

[hosts.trojan9_neural_host]
file = "trojan9_neural_host.v"
description = "Neural network accelerator with configurable layers"
# Structural parameters
[hosts.trojan9_neural_host.params]
NEURON_COUNT = { type = "choice", values = [16, 32, 64], description = "Number of neurons per layer" }
LAYER_COUNT = { type = "choice", values = [2, 4, 8], description = "Number of layers" }
NEURAL_PATTERN = { type = "random_hex", bits = 72, description = "Pattern for neural data generation" }

[hosts.trojan9_dsp_host]
file = "trojan9_dsp_host.v"
description = "DSP accelerator with multiple filter modes"
# Structural parameters
[hosts.trojan9_dsp_host.params]
FILTER_ORDER = { type = "choice", values = [8, 16, 32], description = "Filter order" }
SAMPLE_WIDTH = { type = "choice", values = [8, 16, 24], description = "Sample width in bits" }
DSP_PATTERN = { type = "random_hex", bits = 96, description = "Pattern for DSP data generation" }

[hosts.trojan9_vector_host]
file = "trojan9_vector_host.v"
description = "Vector processing unit with parallel ALUs"
# Structural parameters
[hosts.trojan9_vector_host.params]
VECTOR_SIZE = { type = "choice", values = [8, 16, 32], description = "Vector size" }
ALU_COUNT = { type = "choice", values = [2, 4, 8], description = "Number of parallel ALUs" }
VECTOR_PATTERN = { type = "random_hex", bits = 80, description = "Pattern for vector data generation" }

[hosts.trojan9_graphics_host]
file = "trojan9_graphics_host.v"
description = "Graphics processing unit with rendering modes"
# Structural parameters
[hosts.trojan9_graphics_host.params]
PIXEL_WIDTH = { type = "choice", values = [4, 8, 16], description = "Pixel width in bits" }
TEXTURE_SIZE = { type = "choice", values = [32, 64, 128], description = "Texture size" }
GFX_PATTERN = { type = "random_hex", bits = 64, description = "Pattern for graphics data generation" }

[hosts.trojan9_compression_host]
file = "trojan9_compression_host.v"
description = "Data compression unit with multiple algorithms"
# Structural parameters
[hosts.trojan9_compression_host.params]
BUFFER_SIZE = { type = "choice", values = [16, 32, 64], description = "Compression buffer size" }
DICT_SIZE = { type = "choice", values = [8, 16, 32], description = "Dictionary size for LZ compression" }
COMP_PATTERN = { type = "random_hex", bits = 56, description = "Pattern for compression data generation" }